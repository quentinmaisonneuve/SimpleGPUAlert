## Global properties
# Channels of notification separate by a comma (available channels : DESKTOP, MAIL, TELEGRAM and WEB_REQUEST | more to come)
# If there is more than one channel for notification, notification are send by order on the list
NOTIFICATION_CHANNEL = TELEGRAM

# Known locale that's actually working : DE, ES, FR, IT, NL, UK
# You can check if a locale is available with the link below and by replacing the %s by your locale :
# Example for the Switzerland : https://api.store.nvidia.com/partner/v1/feinventory?skus=CH&locale=CH
LOCALES = FR
NVIDIA_API_LINK = https://api.store.nvidia.com/partner/v1/feinventory?skus=%s&locale=%s

# GPU you be to be alerted on, actually available : 3060ti, 3070, 3070ti, 3080, 3080ti, 3090
GPU = 3060ti, 3080

# Time (in millisecond) between each time we get the information about availability (all request on 'api.store.nvidia.com' are made in the same thread)
REFRESH_INTERVAL = 5000

# Time (in millisecond) between each notification (by channel)
TIMEOUT_NOTIFICATION_CHANNEL = 500

# If a drop (for a specific channel, locale and GPU) is still available after x minute will send a new notification (0 to send only one notification per drop)
# Time (in minute) between each notification (by locale by GPU)
TIMEOUT_NOTIFICATION_DROP = 0

# If blank default is INFO, OFF to disable logs
LOG_LEVEL = INFO

# If you want to test your parameters you can use this property :
# If true will send a notification anyway even if the GPU is not available or the timeout is not reached
TEST_NOTIFICATION = false


## Desktop properties
# Title template of the desktop notification
# first %s : Locale, second %s GPU name
DESKTOP_TITLE_TEMPLATE = Nvidia %s - %s is available

# Message template of the desktop notification
# %s purchase link
DESKTOP_MESSAGE_TEMPLATE = %s


## Mail properties
USER_MAIL = test@gmail.com
USER_PASSWORD = mypassword

# If blank send the mail to USER_MAIL
USER_MAIL_RECIPIENTS =

# You may need to setup your mail box to ensure it can be used by a tierce application as this one
# Exemple for Gmail :
# - Two Steps Verification should be turned off.
# - Allow Less Secure App(should be turned on) : https://myaccount.google.com/lesssecureapps
# - Try this link if it still doesn't work : https://accounts.google.com/DisplayUnlockCaptcha
SMTP_SERVER_ADRESS = smtp.gmail.com
PORT = 587

# Subject template of the email
# first %s : Locale, second %s GPU name
MAIL_SUBJECT_TEMPLATE = Nvidia %s - %s is available

# Message template of the email
# %s purchase link
MAIL_MESSAGE_TEMPLATE = Purchase link : %s


## Telegram properties
TELEGRAM_API_LINK = https://api.telegram.org/bot%s/sendMessage?chat_id=%s&text=%s
API_TOKEN =
CHAT_ID =

# Template
# %s : Locale
# %s : %0A (line return)
# %s : GPU name
# %s : %0A (line return)
# %s : purchase link
TELEGRAM_MESSAGE_TEMPLATE = Nvidia %s%sNvidia GeForce RTX %s FE%s%s


## Web request properties
# Url will be called, response body and status code will be logged
URL_TO_CALL =
